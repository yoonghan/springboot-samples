buildscript {
    repositories {
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1")
    }
}
group = 'walcron'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

bootJar {
    baseName = 'sample-microservice'
    version =  '0.1.0'
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

repositories {
  mavenLocal()
  maven {
      url "http://nexus.detss.corpintra.net/repository/gradle-plugins"
  }
}

checkstyle {
	ignoreFailures = true
	configFile = new File('./codequality/checkstyle.cfg')
}

findbugs{
	ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    findbugsTest.enabled=false
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
	ignoreFailures = false
	pmdTest.enabled=false
    ruleSetFiles = files(new File('./codequality/pmd.xml'))
}

tasks.withType(Pmd){
    reports{
        xml.enabled=true
        html.enabled=true
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.data:spring-data-mongodb")
    compile("org.springframework.boot:spring-boot-devtools")
    compile('org.projectlombok:lombok:1.18.0')
    testCompile('info.cukes:cucumber-java:1.2.5')
    testCompile('info.cukes:cucumber-junit:1.2.5')
    testCompile('info.cukes:cucumber-spring:1.2.5')
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
